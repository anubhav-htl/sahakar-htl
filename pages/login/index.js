"use client";
import Head from "next/head";
import { Inter, Linden_Hill } from "next/font/google";
import { useEffect, useState } from "react";
import Router from "next/router";
import { toast } from "react-toastify";
import { API_URL } from "../../public/constant";
import Link from "next/link";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [loginData, setLoginData] = useState({ email: "", password: "" });
  const [eyeShow, setEyeShow] = useState(false);
  const handleEyeShow = () => {
    setEyeShow(!eyeShow);
  };
  const handleInput = (e) => {
    const { name, value } = e.target;
    setLoginData({ ...loginData, [name]: value });
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      const response = await fetch(API_URL + "admin-login", {
        method: "POST",
        body: JSON.stringify(loginData),
        headers: {
          "Content-Type": "application/json",
        },
      });
      const data = await response.json();
      if (data.status) {
        if (data.data.role_id === 2) {
          localStorage.setItem(
            "AdminLogin",
            JSON.stringify({
              login: true,
              token: data.accessToken,
              data: data.data,
            })
          );
          // localStorage.setItem("sidebarActive", 1);
          const Token = JSON.parse(localStorage.getItem("AdminLogin"));
          const token = Token.token;
          const header = {
            headers: {
              Authorization: `Bearer ${token}`,
              "Content-Type": "application/json",
            },
          };
          Router.push("/admin/dashboard");
        } else if (data.data.role_id == 5) {
          localStorage.setItem(
            "CoopSocietyLogin",
            JSON.stringify({
              login: true,
              token: data.accessToken,
              data: data.data,
            })
          );

          const Token = JSON.parse(localStorage.getItem("CoopSocietyLogin"));
          const token = Token.token;
          const header = {
            headers: {
              Authorization: `Bearer ${token}`,
              "Content-Type": "application/json",
            },
          };
          Router.push("/registration");
        } else if (data.data.role_id === 6) {
          localStorage.setItem(
            "StateWiseLogin",
            JSON.stringify({
              login: true,
              token: data.accessToken,
              data: data.data,
            })
          );

          const Token = JSON.parse(localStorage.getItem("StateWiseLogin"));
          const token = Token.token;
          const header = {
            headers: {
              Authorization: `Bearer ${token}`,
              "Content-Type": "application/json",
            },
          };
          Router.push("/user");
        } else {
          localStorage.setItem(
            "VolunteerLogin",
            JSON.stringify({
              login: true,
              token: data.accessToken,
              data: data.data,
            })
          );

          const Token = JSON.parse(localStorage.getItem("VolunteerLogin"));
          const token = Token.token;
          const header = {
            headers: {
              Authorization: `Bearer ${token}`,
              "Content-Type": "application/json",
            },
          };
          Router.push("/volunteer/dashboard");
        }
      } else {
        toast.warning(data.message);
      }
      // const admin_details = await fetch(API_URL + "admin-login", {
      //   method: "POST", // or 'PUT'
      //   headers: {
      //     "Content-Type": "application/json",
      //   },
      //   body: JSON.stringify(loginData),
      // });
      // const data_daa = await response.json();
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };

  // useEffect(() => {
  //   const keyDownHandler = (event) => {
  //     if (event.key === 'Enter') {
  //       event.preventDefault();
  //       handleSubmit();
  //     }
  //   }
  //   document.addEventListener('keydown', keyDownHandler);
  //   return () => {
  //     document.removeEventListener('keydown', keyDownHandler);
  //   }
  // }, [])

  const keyDownHandler = (event) => {
    if (event.key === "Enter") {
      event.preventDefault();
      event.stopPropagation();
      handleSubmit(event);
    }
  };

  const handleRegistration = () => {
    Router.push("/registration/sign-up");
  };

  return (
    <>
      <Head>
        <title>Sahkar</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/header.png" type="image/png" sizes="32x32" />
      </Head>

      <div
        className="modal fade"
        id="registeration"
        data-bs-backdrop="static"
        data-bs-keyboard="false"
        tabindex="-1"
        aria-labelledby="deleteUserLabel"
        aria-hidden="true"
      >
        <div className="modal-dialog">
          <div className="modal-content">
            <div className="modal-body">
              Already have an account, Please login with Email and Password
            </div>
            <div className="modal-footer">
              <button
                type="button"
                className="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Cancel
              </button>
              <button
                type="button"
                className="btn btn-primary"
                data-bs-dismiss="modal"
                onClick={handleRegistration}
              >
                Sign Up
              </button>
            </div>
          </div>
        </div>
      </div>
      <div>
        <main className="login-page digital-sahkar">
          <div className="d-flex justify-content-center align-items-center">
            <div className="loginmain mx-3">
              <input type="checkbox" id="chk" aria-hidden="true" />
              <div className="signup">
                <span className="logo login_fishfred_logo d-flex align-items-center">
                  <span className="d-none d-lg-block p-3">Sahkar</span>
                </span>
              </div>
              <div className="login">
                <form>
                  <div className="form-group">
                    <label for="chk" aria-hidden="true">
                      Admin / Volunteer Login
                    </label>
                    <div className="row">
                      <div className="col-md-12 input_form">
                        <input
                          className="form-control input_value_login"
                          type="email"
                          name="email"
                          value={loginData.email}
                          placeholder="Email"
                          required=""
                          onChange={handleInput}
                        />
                      </div>

                      <div className="col-md-12 input_form">
                        <div className="position-relative password-eye">
                          <input
                            className="form-control input_value_login mb-0"
                            type={eyeShow ? "text" : "password"}
                            name="password"
                            value={loginData.password}
                            placeholder="Password"
                            onChange={handleInput}
                            required=""
                          />
                          <i
                            className={
                              eyeShow
                                ? "bi bi-eye eye-icon"
                                : "bi bi-eye-slash eye-icon"
                            }
                            onClick={handleEyeShow}
                          ></i>
                        </div>
                      </div>
                    </div>
                    <div className="col-md-12 input_form">
                      <div className="position-relative text-end">
                        <Link
                          href="/reset"
                          style={{
                            fontSize: "13px",
                            textDecoration: "underline",
                            color: "#221e4a",
                          }}
                        >
                          Forgot Password
                        </Link>
                      </div>
                    </div>

                    {/* <div className="position-relative text-end">
                      <button
                        // onClick={handleRegistration}
                        style={{
                          fontSize: "13px",
                          textDecoration: "underline",
                          color: "#221e4a",
                          cursor: "pointer",
                        }}
                        type="button"
                        className="btn btn-link p-0"
                        data-bs-toggle="modal"
                        data-bs-target="#registeration"
                      ></button>
                    </div> */}

                    <button
                      type="submit"
                      onKeyDown={keyDownHandler}
                      onClick={(event) => handleSubmit(event)}
                      className="login_button"
                    >
                      Login
                    </button>

                    <button
                      type="button"
                      data-bs-toggle="modal"
                      data-bs-target="#registeration"
                      className="login_button "
                      style={{ fontSize: "14px" }}
                    >
                      Register & Add Your Cooperative Society
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </main>
      </div>
    </>
  );
}
