"use client";
import Head from "next/head";
import { Inter, Linden_Hill } from "next/font/google";
import { useEffect, useState } from "react";
import Router from "next/router";
import { toast } from "react-toastify";
import { API_URL } from "@/public/constant";
import Link from "next/link";
import { useSearchParams } from "next/navigation";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const searchParams = useSearchParams();

  const passToken = searchParams.get('token');
  console.log("passToken", passToken);
  const [changePassword, setChangePassword] = useState({
    new_password: '',
    confirm_password: '',
  });
  const [eyeShow, setEyeShow] = useState(false);
  const [cnfeyeShow, setCnfEyeShow] = useState(false);
  const handleEyeShow = (id) => {
    console.log("");
    if (id == "1") {
      setEyeShow(!eyeShow);
    }
    else {
      setCnfEyeShow(!cnfeyeShow);
    }
  }
  const handleInput = (e) => {
    const { name, value } = e.target;
    setChangePassword({ ...changePassword, [name]: value })
  };

  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      const response = await fetch(API_URL + `admin-reset-password/${passToken}`, {
        method: "POST",
        headers: {
          // Authorization: `Bearer ${passToken}`,
          // Accept: `multipart/form-data`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify(changePassword),
      });
      const data = await response.json();
      // console.log("changePass",data);

      if (data.status === true) {
        // Router.push("/admin/dashboard");
        toast(data.message, 3000);
        setTimeout(() => {
          Router.push("/");
        }, 4000)

      } else {
        toast(data.message);
      }
    } catch (error) {
      console.error("Error fetching data:", error);
    }
  };

  // useEffect(() => {
  //   const keyDownHandler = (event) => {
  //     if (event.key === 'Enter') {
  //       event.preventDefault();
  //       handleSubmit();
  //     }
  //   }
  //   document.addEventListener('keydown', keyDownHandler);
  //   return () => {
  //     document.removeEventListener('keydown', keyDownHandler);
  //   }
  // }, [])

  const keyDownHandler = (event) => {
    if (event.key === 'Enter') {
      event.preventDefault();
      event.stopPropagation();
      handleSubmit(event);
    }
  }

  return (
    <>
      <Head>
        <title>Digital Sahkar</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/header.png" type="image/png" sizes="32x32" />
       
        
      </Head>

      <main className="login-page digital-sahkar">
        <div className="loginmain">
          <input type="checkbox" id="chk" aria-hidden="true" />
          <div className="signup">
            <span class="logo login_fishfred_logo d-flex align-items-center"><span class="d-none d-lg-block p-3">Digital Sahkar</span></span>
            {/* <a
              className="logo login_fishfred_logo d-flex align-items-center"
              href="/admin/dashboard"
            >
          <img src="/logo.png" alt="profile" width="100" height="200" />
             <span className="d-none d-lg-block">FishFred</span>
              <span className="d-none d-lg-block">Digital Sahkar</span>
            </a> */}
          </div>
          <div className="login">
            <form>
              <div className="form-group forgotPage">
                <h2>Reset Password ?</h2>
                <span>
                  your account password must be updated periodically.
                  Please change your password to continoue..
                </span>
                <div className="row">
                  <div className="col-md-12">
                    <div className="position-relative password-eye input_form">
                      <input
                        className="form-control input_value_login"
                        type={eyeShow ? "text" : "password"}
                        name="new_password"
                        value={changePassword.new_password}
                        placeholder="Password"
                        onChange={handleInput}
                        required=""
                      />
                      <i className={eyeShow ? "bi bi-eye eye-icon" : "bi bi-eye-slash eye-icon"} onClick={(e) => handleEyeShow(1)}></i>
                    </div>
                  </div>
                  <div className="col-md-12">
                    <div className="position-relative password-eye input_form">
                      <input
                        className="form-control input_value_login"
                        type={cnfeyeShow ? "text" : "password"}
                        name="confirm_password"
                        value={changePassword.confirm_password}
                        placeholder="confirm_Password"
                        onChange={handleInput}
                        required=""
                      />
                      <i className={cnfeyeShow ? "bi bi-eye eye-icon" : "bi bi-eye-slash eye-icon"} onClick={(e) => handleEyeShow(2)}></i>
                    </div>
                  </div>
                </div>
                <div className="resetPassBtn">
                  <button
                    type="submit"
                    onKeyDown={keyDownHandler}
                    onClick={(event) => handleSubmit(event)}

                  >
                    Reset Password
                  </button>
                </div>
                {/* <Link to="/reset/password"
                  type="submit"
                  onKeyDown={keyDownHandler}
                  onClick={(event) => handleSubmit(event)}
                  className="login_button"
                >
              Reset Password
                </Link> */}

              </div>
            </form>
          </div>
        </div>
      </main>
    </>
  );
}
